cmake_minimum_required(VERSION 2.6)
enable_language(Fortran)
project(Unsteady_CD)
enable_language (CXX C Fortran)
#set(CMAKE_CXX_COMPILER "mpicxx")
#set(CMAKE_C_COMPILER mpicc)
#set(CMAKE_Fortran_COMPILER gfortran)

#set(CMAKE_CXX_STANDARD 11)

list(APPEND SOURCE_FILES ../inmost_ani_lib/inmost_ani_mesh.cpp)
list(APPEND SOURCE_FILES ../inmost_ani_lib/inmost_ani_mesh.h)
list(APPEND SOURCE_FILES ../inmost_ani_lib/inmost_ani_fem.cpp)
list(APPEND SOURCE_FILES ../inmost_ani_lib/inmost_ani_fem.h)
list(APPEND SOURCE_FILES ../inmost_ani_lib/utils.cpp)
list(APPEND SOURCE_FILES ../inmost_ani_lib/utils.h)
list(APPEND SOURCE_FILES main.cpp)
set(EXEC_NAME Unst_CD)
set(FORT_LIB_NAME "fort_lib_${EXEC_NAME}")
add_library (${FORT_LIB_NAME} STATIC ../inmost_ani_lib/refine.f  forlibfem.f)



add_executable(${EXEC_NAME} ${SOURCE_FILES} )

#add_executable(CLion_proj ${SOURCE_FILES} inmost_ani_fem.cpp inmost_ani_fem.h)

target_link_libraries(${EXEC_NAME}  ${FORT_LIB_NAME})
target_link_libraries(${EXEC_NAME} inmost)

if(DEFINED ENV{ANI_DIR})
	target_link_libraries(${EXEC_NAME} $ENV{ANI_DIR}/lib/libmba3D-3.0.a)
	target_link_libraries(${EXEC_NAME} $ENV{ANI_DIR}/lib/libfem3D-3.0.a)
	include_directories($ENV{ANI_DIR}/src/aniFEM)	
else()
	MESSAGE("ANI_DIR IS NOT_DEFINED. Compilation of ani_inmost_examples failed")
endif()

if(USE_SOLVER)
  if(USE_SOLVER_ANI)
    message("linking ${EXEC_NAME} with ani3d and BLAS")
    target_link_libraries(${EXEC_NAME} ani3d ${BLAS_LIBRARIES})
    if(BLAS_LINKER_FLAGS)
      set_target_properties(${EXEC_NAME} PROPERTIES LINK_FLAGS "${BLAS_LINKER_FLAGS}")
    endif()
  endif()
  if(USE_SOLVER_PETSC)
    message("linking ${EXEC_NAME} with PETSc")
    target_link_libraries(${EXEC_NAME} ${PETSC_LIBRARIES})
  endif()
  if(USE_SOLVER_TRILINOS)
    message("linking ${EXEC_NAME} with Trilinos")
    target_link_libraries(${EXEC_NAME} ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})
  endif()
  if(USE_SOLVER_METIS)
    message("linking ${EXEC_NAME} with Metis")
    target_link_libraries(${EXEC_NAME} ${METIS_LIBRARIES})
  endif()
  if(USE_SOLVER_MONDRIAAN)
    message("linking ${EXEC_NAME} with Mondriaan")
    target_link_libraries(${EXEC_NAME} ${MONDRIAAN_LIBRARIES})
  endif()
  if(USE_SOLVER_SUPERLU)
    message("linking ${EXEC_NAME} with SuperLU")
    target_link_libraries(${EXEC_NAME} ${SUPERLU_LIBRARIES})
  endif()
endif()


if(USE_PARTITIONER)
  if(USE_PARTITIONER_ZOLTAN)
    message("linking ${EXEC_NAME} with Zoltan")
    target_link_libraries(${EXEC_NAME} ${ZOLTAN_LIBRARIES})
  endif()
  if(USE_PARTITIONER_PARMETIS)
    message("linking ${EXEC_NAME}D with ParMETIS")
    target_link_libraries(${EXEC_NAME} ${PARMETIS_LIBRARIES})
  endif()
endif()

if(USE_MPI)
  message("linking ${EXEC_NAME} with MPI")
  target_link_libraries(${EXEC_NAME} ${MPI_LIBRARIES}) 
  if(MPI_LINK_FLAGS)
    set_target_properties(${EXEC_NAME} PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
  endif() 
endif(USE_MPI)


#set(MAIN_DIR "/home/vasily/Work/INMOST_ANI/")

install(TARGETS ${EXEC_NAME} EXPORT inmost-targets RUNTIME DESTINATION bin)
