project(Solver)
set(SOURCE main.cpp)

add_executable(Solver ${SOURCE})

target_link_libraries(Solver inmost)

if(USE_SOLVER_ANI)
  message("linking Solver with ani3d")
  target_link_libraries(Solver ani3d)
endif()
if(USE_SOLVER_PETSC)
  message("linking Solver with PETSc")
  link_directories(${PETSC_LIBRARY_DIRS})
  target_link_libraries(Solver ${PETSC_LIBRARIES})
endif()
if(USE_SOLVER_TRILINOS)
  message("linking Solver with Trilinos")
  link_directories(${Trilinos_LIBRARY_DIRS})
  link_directories(${Trilinos_TPL_LIBRARY_DIRS})
  target_link_libraries(Solver ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})
endif()
if(USE_PARTITIONER)
  if(USE_PARTITIONER_ZOLTAN)
    message("linking Solver with Zoltan")
    target_link_libraries(Solver ${ZOLTAN_LIBRARIES})
  endif()
  if(USE_PARTITIONER_PARMETIS)
    message("linking Solver with ParMETIS")
    target_link_libraries(Solver ${PARMETIS_LIBRARIES})
  endif()
endif()

if(USE_MPI)
  message("linking Solver with MPI")
  target_link_libraries(Solver ${MPI_LIBRARIES}) 
  if(MPI_LINK_FLAGS)
    set_target_properties(Solver PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
  endif() 
endif(USE_MPI)
