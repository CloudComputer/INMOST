project(solver_test002)
set(SOURCE main.cpp)

add_executable(solver_test002 ${SOURCE})

target_link_libraries(solver_test002 inmost)

if(USE_MPI)
	message("linking solver_test002 with MPI")
	target_link_libraries(solver_test002 ${MPI_LIBRARIES}) 
  if(MPI_LINK_FLAGS)
	  set_target_properties(solver_test002 PROPERTIES LINK_FLAGS "${MPI_LINK_FLAGS}")
  endif() 
endif(USE_MPI)

if(USE_SOLVER)
  if(USE_SOLVER_ANI)
	  message("linking solver_test002 with ani3d and BLAS")
	  target_link_libraries(solver_test002 ani3d ${BLAS_LIBRARIES})
    if(BLAS_LINKER_FLAGS)
	    set_target_properties(solver_test002 PROPERTIES LINK_FLAGS "${BLAS_LINKER_FLAGS}")
    endif()
  endif()
  if(USE_SOLVER_PETSC)
	  message("linking solver_test002 with PETSc")
	  target_link_libraries(solver_test002 ${PETSC_LIBRARIES})
  endif()
  if(USE_SOLVER_TRILINOS)
	  message("linking solver_test002 with Trilinos")
	  target_link_libraries(solver_test002 ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})
  endif()
endif()

install(TARGETS solver_test002 EXPORT inmost-targets RUNTIME DESTINATION bin)
